/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author HP
 */
import java.sql.*;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
public class En_Book extends javax.swing.JInternalFrame {

    /**
     * Creates new form En_Shelf
     */
    public En_Book() {
        initComponents();
        cal_bno();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lb1 = new javax.swing.JLabel();
        lb2 = new javax.swing.JLabel();
        bt1 = new javax.swing.JButton();
        bt2 = new javax.swing.JButton();
        bt3 = new javax.swing.JButton();
        tf2 = new javax.swing.JTextField();
        lb3 = new javax.swing.JLabel();
        lb6 = new javax.swing.JLabel();
        lb7 = new javax.swing.JLabel();
        tf3 = new javax.swing.JTextField();
        lb4 = new javax.swing.JLabel();
        lb5 = new javax.swing.JLabel();
        cb1 = new javax.swing.JComboBox<>();
        cb2 = new javax.swing.JComboBox<>();
        cb3 = new javax.swing.JComboBox<>();
        cb4 = new javax.swing.JComboBox<>();
        tf1 = new javax.swing.JLabel();
        lb8 = new javax.swing.JLabel();
        lb9 = new javax.swing.JLabel();
        tf7 = new javax.swing.JLabel();
        tf4 = new javax.swing.JLabel();
        tf6 = new javax.swing.JLabel();
        tf8 = new javax.swing.JLabel();
        tf9 = new javax.swing.JLabel();
        tf5 = new javax.swing.JLabel();
        lb = new javax.swing.JLabel();

        setTitle("Book Enteries");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lb1.setText("BOOK NO.     :");
        jPanel1.add(lb1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 140, -1));

        lb2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lb2.setText("BOOK NAME :");
        jPanel1.add(lb2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 140, -1));

        bt1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        bt1.setForeground(new java.awt.Color(0, 0, 102));
        bt1.setText("SAVE");
        bt1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bt1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bt1MouseExited(evt);
            }
        });
        bt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt1ActionPerformed(evt);
            }
        });
        jPanel1.add(bt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 410, -1, -1));

        bt2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        bt2.setForeground(new java.awt.Color(0, 0, 102));
        bt2.setText("CLEAR");
        bt2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bt2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bt2MouseExited(evt);
            }
        });
        bt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt2ActionPerformed(evt);
            }
        });
        jPanel1.add(bt2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 410, -1, -1));

        bt3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        bt3.setForeground(new java.awt.Color(0, 0, 102));
        bt3.setText("CLOSE");
        bt3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bt3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bt3MouseExited(evt);
            }
        });
        bt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt3ActionPerformed(evt);
            }
        });
        jPanel1.add(bt3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 410, -1, -1));

        tf2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        tf2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf2ActionPerformed(evt);
            }
        });
        tf2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf2KeyTyped(evt);
            }
        });
        jPanel1.add(tf2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, 240, 30));

        lb3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lb3.setText("AUTHOR NAME :");
        jPanel1.add(lb3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, 160, -1));

        lb6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lb6.setText("SHELF NO. :");
        jPanel1.add(lb6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 140, -1));

        lb7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lb7.setText("PRICE :");
        jPanel1.add(lb7, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, 70, -1));

        tf3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        tf3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf3KeyTyped(evt);
            }
        });
        jPanel1.add(tf3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 280, 240, 30));

        lb4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lb4.setText("PUBLISHER NAME :");
        jPanel1.add(lb4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 180, -1));

        lb5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lb5.setText("ALMIRAH NAME :");
        jPanel1.add(lb5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 170, -1));

        cb1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cb1.setModel(new javax.swing.DefaultComboBoxModel()
        );
        cb1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cb1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cb1FocusLost(evt);
            }
        });
        jPanel1.add(cb1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, 250, 30));

        cb2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cb2.setModel(new javax.swing.DefaultComboBoxModel()
        );
        cb2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cb2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cb2FocusLost(evt);
            }
        });
        jPanel1.add(cb2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 160, 250, 30));

        cb3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cb3.setModel(new javax.swing.DefaultComboBoxModel()
        );
        cb3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cb3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cb3FocusLost(evt);
            }
        });
        cb3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb3ActionPerformed(evt);
            }
        });
        jPanel1.add(cb3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 200, 250, 30));

        cb4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cb4.setModel(new javax.swing.DefaultComboBoxModel()
        );
        cb4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cb4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cb4FocusLost(evt);
            }
        });
        cb4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb4ActionPerformed(evt);
            }
        });
        jPanel1.add(cb4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 240, 250, 30));

        tf1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tf1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tf1.setOpaque(true);
        jPanel1.add(tf1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, 60, 30));

        lb8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lb8.setText("STATUS  :");
        jPanel1.add(lb8, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 320, 90, -1));

        lb9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lb9.setText("WHITEOFF :");
        jPanel1.add(lb9, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 360, 120, -1));

        tf7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tf7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tf7.setOpaque(true);
        jPanel1.add(tf7, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 160, 60, 30));

        tf4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tf4.setText("Y");
        tf4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tf4.setOpaque(true);
        jPanel1.add(tf4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 320, 60, 30));

        tf6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tf6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tf6.setOpaque(true);
        jPanel1.add(tf6, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 120, 60, 30));

        tf8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tf8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tf8.setOpaque(true);
        jPanel1.add(tf8, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 200, 60, 30));

        tf9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tf9.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tf9.setOpaque(true);
        jPanel1.add(tf9, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 240, 60, 30));

        tf5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tf5.setText("N");
        tf5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tf5.setOpaque(true);
        jPanel1.add(tf5, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 360, 60, 30));

        lb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Nature7.jpg"))); // NOI18N
        jPanel1.add(lb, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 470));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void cal_bno()
    {
          Connection con = null;
          Statement st = null;
          ResultSet rs =  null;
          String sql = "";
          
          try
          {
               try
               { 
                     Class.forName("java.sql.Driver");
                     con= DriverManager.getConnection(Login.URL,Login.URS,Login.PAS);
                     st = con.createStatement();
                     
                     sql = "select max(bno) as mx from book ;";
                     rs = st.executeQuery(sql);
                     
                     if(rs.next())
                         tf1.setText(rs.getInt("mx")+1+"");
                     else
                         tf1.setText("1");
               }
               catch(Exception e)
               {
                     JOptionPane.showMessageDialog(null,"ERROR : "+e.getMessage());
               }
          }
          catch(Exception e)
          {
                 JOptionPane.showMessageDialog(null,"ERROR : "+e.getMessage());
          }
    }
    private void bt1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt1MouseEntered
        bt1.setBackground(java.awt.Color.BLACK);
        bt1.setForeground(java.awt.Color.ORANGE);
    }//GEN-LAST:event_bt1MouseEntered

    private void bt1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt1MouseExited
        bt1.setBackground(java.awt.Color.WHITE);
        bt1.setForeground(java.awt.Color.BLUE);
    }//GEN-LAST:event_bt1MouseExited

    private void bt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt1ActionPerformed
        Connection con = null;
        Statement st = null ;
        String sql = "";

        try
        {
            try
            {
                Class.forName("java.sql.Driver");
                con = DriverManager.getConnection(Login.URL,Login.URS,Login.PAS);
                st = con.createStatement();

                sql = "insert into book values("+tf1.getText()+",'"+tf2.getText()
                        +"',"+tf6.getText()+","+tf7.getText()+","+tf8.getText()+","+tf9.getText()+
                        ","+tf3.getText()+",'"+tf4.getText()+"','"+tf5.getText()+"');";

                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null,"BOOK ADDED!!");
                this.bt2.doClick();

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,"ERROR : "+e.getMessage());
            }
            finally
            {
                if(!con.isClosed())
                    con.close();
                if(!st.isClosed())
                    st.close();
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"ERROR : "+e.getMessage());
        }
    }//GEN-LAST:event_bt1ActionPerformed

    private void bt2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt2MouseEntered
        bt2.setBackground(java.awt.Color.BLACK);
        bt2.setForeground(java.awt.Color.ORANGE);
    }//GEN-LAST:event_bt2MouseEntered

    private void bt2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt2MouseExited
        bt2.setBackground(java.awt.Color.WHITE);
        bt2.setForeground(java.awt.Color.BLUE);
    }//GEN-LAST:event_bt2MouseExited

    private void bt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt2ActionPerformed
        cal_bno();
        tf2.setText("");
        tf3.setText("");
        tf6.setText("");
        tf7.setText("");
        tf8.setText("");
        tf9.setText("");
       
        tf2.requestFocus();
        this.cb1.removeAllItems();
        this.cb2.removeAllItems();
        this.cb3.removeAllItems();
        this.cb4.removeAllItems();
    }//GEN-LAST:event_bt2ActionPerformed

    private void bt3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt3MouseEntered
        bt3.setBackground(java.awt.Color.BLACK);
        bt3.setForeground(java.awt.Color.ORANGE);
    }//GEN-LAST:event_bt3MouseEntered

    private void bt3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt3MouseExited
        bt3.setBackground(java.awt.Color.WHITE);
        bt3.setForeground(java.awt.Color.BLUE);
    }//GEN-LAST:event_bt3MouseExited

    private void bt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt3ActionPerformed
        this.dispose();
        new Main().setVisible(true);
    }//GEN-LAST:event_bt3ActionPerformed

    private void tf2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf2KeyTyped
        char ch = evt.getKeyChar();
        if(ch == '\n')
        {
            tf2.setText(En_Almirah.toTitleCase(tf2.getText()));
            cb1.requestFocus();
        }          
    }//GEN-LAST:event_tf2KeyTyped

    private void tf3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf3KeyTyped
        char ch = evt.getKeyChar();
        if(ch == '\n')
        {
            bt1.doClick();
        }   
    }//GEN-LAST:event_tf3KeyTyped

    private void tf2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf2ActionPerformed

    private void cb3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb3ActionPerformed

    private void cb4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb4ActionPerformed

    private void cb1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cb1FocusGained
        Connection con = null;
        ResultSet rs = null;
        Statement st = null;
        String sql = "";
        
        DefaultComboBoxModel dm = (DefaultComboBoxModel) cb1.getModel();
        
        try
        {
            try
            {
                   Class.forName("java.sql.Driver");
                   con = DriverManager.getConnection(Login.URL,Login.URS,Login.PAS);
                   st = con.createStatement();
                   
                   dm.removeAllElements();
                   dm.addElement("-- select --");
                   
                   sql = "select aunm from author order by aunm";
                   rs = st.executeQuery(sql);
                   while(rs.next())
                       dm.addElement(rs.getString("aunm"));
            }
            catch(Exception e)
            {
                   JOptionPane.showMessageDialog(null,"ERROR : "+e.getMessage());
            }
            finally 
            {
                  if(!con.isClosed())
                       con.close();
                  if(!rs.isClosed())
                       rs.close();
                  if(!st.isClosed())
                       st.close();
            }
        }
        catch(Exception e)
        {
              JOptionPane.showMessageDialog(null,"ERROR : "+e.getMessage());
        }
    }//GEN-LAST:event_cb1FocusGained

    private void cb2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cb2FocusGained
        Connection con = null;
        ResultSet rs = null;
        Statement st = null;
        String sql = "";
        
        DefaultComboBoxModel dm = (DefaultComboBoxModel) cb2.getModel();
        
        try
        {
            try
            {
                   Class.forName("java.sql.Driver");
                   con = DriverManager.getConnection(Login.URL,Login.URS,Login.PAS);
                   st = con.createStatement();
                   
                   dm.removeAllElements();
                   dm.addElement("-- select --");
                   
                   sql = "select pubnm from publisher order by pubnm";
                   rs = st.executeQuery(sql);
                   while(rs.next())
                       dm.addElement(rs.getString("pubnm"));
            }
            catch(Exception e)
            {
                   JOptionPane.showMessageDialog(null,"ERROR : "+e.getMessage());
            }
            finally 
            {
                  if(!con.isClosed())
                       con.close();
                  if(!rs.isClosed())
                       rs.close();
                  if(!st.isClosed())
                       st.close();
            }
        }
        catch(Exception e)
        {
              JOptionPane.showMessageDialog(null,"ERROR : "+e.getMessage());
        }
    }//GEN-LAST:event_cb2FocusGained

    private void cb3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cb3FocusGained
        Connection con = null;
        ResultSet rs = null;
        Statement st = null;
        String sql = "";
        
        DefaultComboBoxModel dm = (DefaultComboBoxModel) cb3.getModel();
        
        try
        {
            try
            {
                   Class.forName("java.sql.Driver");
                   con = DriverManager.getConnection(Login.URL,Login.URS,Login.PAS);
                   st = con.createStatement();
                   
                   dm.removeAllElements();
                   dm.addElement("-- select --");
                   
                   sql = "select alnm from almirah order by alnm";
                   rs = st.executeQuery(sql);
                   while(rs.next())
                       dm.addElement(rs.getString("alnm"));
            }
            catch(Exception e)
            {
                   JOptionPane.showMessageDialog(null,"ERROR : "+e.getMessage());
            }
            finally 
            {
                  if(!con.isClosed())
                       con.close();
                  if(!rs.isClosed())
                       rs.close();
                  if(!st.isClosed())
                       st.close();
            }
        }
        catch(Exception e)
        {
              JOptionPane.showMessageDialog(null,"ERROR : "+e.getMessage());
        }
    }//GEN-LAST:event_cb3FocusGained

    private void cb4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cb4FocusGained
      
        if(tf8.getText().equals(""))
            return;
        
        Connection con = null;
        ResultSet rs = null;
        Statement st = null;
        String sql = "";
        
        DefaultComboBoxModel dm = (DefaultComboBoxModel) cb4.getModel();
        
        try
        {
            try
            {
                   Class.forName("java.sql.Driver");
                   con = DriverManager.getConnection(Login.URL,Login.URS,Login.PAS);
                   st = con.createStatement();
                   
                   dm.removeAllElements();
                   dm.addElement("-- select --");
                   
                   if(tf8.getText().equals(""))
                       return ;
                   
                   sql = "select shno from shelf where alno = "+tf8.getText()+";";
                   rs = st.executeQuery(sql);
                   while(rs.next())
                       dm.addElement(rs.getInt("shno"));
            }
            catch(Exception e)
            {
                   JOptionPane.showMessageDialog(null,"ERROR : "+e.getMessage());
            }
            finally 
            {
                  if(!con.isClosed())
                       con.close();
                  if(!rs.isClosed())
                       rs.close();
                  if(!st.isClosed())
                       st.close();
            }
        }
        catch(Exception e)
        {
              JOptionPane.showMessageDialog(null,"ERROR : "+e.getMessage());
        }
    }//GEN-LAST:event_cb4FocusGained

    private void cb3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cb3FocusLost
          Connection con = null;
          ResultSet rs  = null ;
          Statement st = null ;
          String sql ="";
          
          try
          {
               try
               {
                      Class.forName("java.sql.Driver");
                      con = DriverManager.getConnection(Login.URL,Login.URS,Login.PAS);
                      st = con.createStatement();
                      
                      sql = "select alno from almirah where alnm = '"+cb3.getSelectedItem()+"';";
                      rs = st.executeQuery(sql);
                      if(rs.next())
                          tf8.setText(rs.getInt("alno")+"");
                           
               }
               catch(Exception e)
               {
                      JOptionPane.showMessageDialog(null,"ERROR  : "+e.getMessage());
               }
          }
          catch(Exception e)
          {
                JOptionPane.showMessageDialog(null,"ERROR  : "+e.getMessage());
          }
    }//GEN-LAST:event_cb3FocusLost

    private void cb1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cb1FocusLost
          Connection con = null;
          ResultSet rs  = null ;
          Statement st = null ;
          String sql ="";
          
          try
          {
               try
               {
                      Class.forName("java.sql.Driver");
                      con = DriverManager.getConnection(Login.URL,Login.URS,Login.PAS);
                      st = con.createStatement();
                      
                      sql = "select auno from author where aunm = '"+cb1.getSelectedItem()+"';";
                      rs = st.executeQuery(sql);
                      if(rs.next())
                          tf6.setText(rs.getInt("auno")+"");
                           
               }
               catch(Exception e)
               {
                      JOptionPane.showMessageDialog(null,"ERROR  : "+e.getMessage());
               }
          }
          catch(Exception e)
          {
                JOptionPane.showMessageDialog(null,"ERROR  : "+e.getMessage());
          }
    }//GEN-LAST:event_cb1FocusLost

    private void cb2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cb2FocusLost
          Connection con = null;
          ResultSet rs  = null ;
          Statement st = null ;
          String sql ="";
          
          try
          {
               try
               {
                      Class.forName("java.sql.Driver");
                      con = DriverManager.getConnection(Login.URL,Login.URS,Login.PAS);
                      st = con.createStatement();
                      
                      sql = "select pubno from publisher where pubnm = '"+cb2.getSelectedItem()+"';";
                      rs = st.executeQuery(sql);
                      if(rs.next())
                          tf7.setText(rs.getInt("pubno")+"");
                           
               }
               catch(Exception e)
               {
                      JOptionPane.showMessageDialog(null,"ERROR  : "+e.getMessage());
               }
          }
          catch(Exception e)
          {
                JOptionPane.showMessageDialog(null,"ERROR  : "+e.getMessage());
          }
    }//GEN-LAST:event_cb2FocusLost

    private void cb4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cb4FocusLost
          Connection con = null;
          ResultSet rs  = null ;
          Statement st = null ;
          String sql ="";
          
          try
          {
               try
               {
                      Class.forName("java.sql.Driver");
                      con = DriverManager.getConnection(Login.URL,Login.URS,Login.PAS);
                      st = con.createStatement();
                      
                      sql = "select shno from shelf where shno = '"+cb4.getSelectedItem()+"';";
                      rs = st.executeQuery(sql);
                      if(rs.next())
                          tf9.setText(rs.getInt("shno")+"");
                           
               }
               catch(Exception e)
               {
                      JOptionPane.showMessageDialog(null,"ERROR  : "+e.getMessage());
               }
          }
          catch(Exception e)
          {
                JOptionPane.showMessageDialog(null,"ERROR  : "+e.getMessage());
          }
    }//GEN-LAST:event_cb4FocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt1;
    private javax.swing.JButton bt2;
    private javax.swing.JButton bt3;
    private javax.swing.JComboBox<String> cb1;
    private javax.swing.JComboBox<String> cb2;
    private javax.swing.JComboBox<String> cb3;
    private javax.swing.JComboBox<String> cb4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lb;
    private javax.swing.JLabel lb1;
    private javax.swing.JLabel lb2;
    private javax.swing.JLabel lb3;
    private javax.swing.JLabel lb4;
    private javax.swing.JLabel lb5;
    private javax.swing.JLabel lb6;
    private javax.swing.JLabel lb7;
    private javax.swing.JLabel lb8;
    private javax.swing.JLabel lb9;
    private javax.swing.JLabel tf1;
    private javax.swing.JTextField tf2;
    private javax.swing.JTextField tf3;
    private javax.swing.JLabel tf4;
    private javax.swing.JLabel tf5;
    private javax.swing.JLabel tf6;
    private javax.swing.JLabel tf7;
    private javax.swing.JLabel tf8;
    private javax.swing.JLabel tf9;
    // End of variables declaration//GEN-END:variables
}
